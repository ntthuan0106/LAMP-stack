pipeline {
    agent any

    environment {
        AZURE_SUBSCRIPTION_ID = credentials('azure-subscription-id')
        AZURE_CLIENT_ID = credentials('azure-client-id')
        AZURE_CLIENT_SECRET = credentials('azure-client-secret')
        AZURE_TENANT_ID = credentials('azure-tenant-id')
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://your-repo-url.git'
            }
        }

        stage('Terraform Init') {
            steps {
                script {
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                script {
                    sh 'terraform apply -auto-approve'
                }
            }
        }

        stage('Terraform refresh') {
            step{
                script{
                    sh 'terraform refresh'
                }
            }
        }

        stage('Ansible Playbook') {
            steps {
                script {
                    // Get public IP of the VM
                    def ip = sh(script: "terraform output -raw public_ip", returnStdout: true).trim()

                    // Run the Ansible playbook
                    ansiblePlaybook(
                        inventory: "all,${ip}",
                        playbook: 'playbook.yml',
                        extras: '--ssh-extra-args="-o StrictHostKeyChecking=no"'
                    )
                }
            }
        }
    }
}
